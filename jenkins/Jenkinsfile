pipeline {
    agent none
    
    environment {
        HOST = 'home.mytest.com'
        HOST_IP = '192.168.102.128'
        MVN_IMAGE = 'maven:3-alpine'
        MVN_WORK_DIR = '/usr/src/mymaven'
        MVN_SETTING_PATH = '/usr/share/maven/ref/settings.xml'
        SOURCE_FILE = 'test01/target/app.jar'
        PROJECT_DIR = '/data/var/jenkinsci_home/workspace/test-mvn'
        HOST_DEST_DIR = '/data/java-jar/test/test-mvn'
        HOST_DEST_FILENAME = 'app.jar'
        SSH_OS_IMAGE = 'roboxes/centos8:3.6.8'
    }
    stages {
        stage('Build') {
            agent {         
                docker {
                    image "${MVN_IMAGE}"
                    args '--add-host $HOST:$HOST_IP -u root -v /root/.m2:/root/.m2 -v /root/.m2/settings.xml:$MVN_SETTING_PATH'         
                }
            }
            steps {
                sh 'mvn -B -DskipTests clean install package'
            }
        }
        
        stage('Transfer') {
            agent {
                docker {
                    image "${SSH_OS_IMAGE}"
                    args '-u root -v /root/.ssh:/root/.ssh -v $HOST_DEST_DIR:$HOST_DEST_DIR --add-host $HOST:$HOST_IP'
                }
            }
            steps {
                sh 'scp $SOURCE_FILE $HOST:${HOST_DEST_DIR}/${HOST_DEST_FILENAME}'
            }
        }
        
        stage('MakeImage') {
            steps {
                sh 'echo MakeImage FINISH'
            }
        }
        
        stage('Deploy') {
            agent {
                docker {
                    image "${SSH_OS_IMAGE}"
                    args '-u root -v /root/.ssh:/root/.ssh --add-host $HOST:$HOST_IP'
                }
            }
            steps {
                sh 'export DATE=`date +%Y-%m-%d-%H-%M-%S` && \
                    echo $DATE'
            }
        }
    }
}
